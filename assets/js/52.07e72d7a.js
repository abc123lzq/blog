(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{174:function(t,s,a){"use strict";a.r(s);var r=a(0),v=Object(r.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"高性能mysql"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#高性能mysql"}},[t._v("#")]),t._v(" 高性能mysql")]),t._v(" "),a("h2",{attrs:{id:"数据库设计规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据库设计规范"}},[t._v("#")]),t._v(" 数据库设计规范")]),t._v(" "),a("h3",{attrs:{id:"数据库对象名称"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据库对象名称"}},[t._v("#")]),t._v(" 数据库对象名称")]),t._v(" "),a("ol",[a("li",[t._v("必须使用 小写字母并用下划线分割 (因为有些系统是严格大小写)")]),t._v(" "),a("li",[t._v("禁止使用mysql保留关键字(如：select,from,...)")]),t._v(" "),a("li",[t._v("能做到见名识义,并且最好不要超过32个字符(如：lzq_userdb , user_account)")]),t._v(" "),a("li",[t._v("临时表必须以tmp为前缀并以日期为后缀")]),t._v(" "),a("li",[t._v("备份库、表必须以bak为前缀并以日期为后缀")]),t._v(" "),a("li",[t._v("存储相同数据的列名和列类型必须一致(多张表的相同数据类型)")])]),t._v(" "),a("h3",{attrs:{id:"数据库基本设计规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据库基本设计规范"}},[t._v("#")]),t._v(" 数据库基本设计规范")]),t._v(" "),a("ol",[a("li",[t._v("所有表必须使用Innodb存储引擎 (5.6以上默认引擎)")]),t._v(" "),a("li",[t._v("数据库和表的字符集统一使用utf8(避免产生乱码)")]),t._v(" "),a("li",[t._v("所有的表和字段都需要添加注释(使用comment从句添加表和列的备注)")]),t._v(" "),a("li",[t._v("从一开始就进行数据字典的维护")]),t._v(" "),a("li",[t._v("尽量控制单标数据量的大小，建议控制在500万以内（可以使用历史数据归档，分库分表等手段来控制数据量大小）")]),t._v(" "),a("li",[t._v("谨慎使用mysql分区表(物理上是多个文件，而逻辑上为一个表)")]),t._v(" "),a("li",[t._v("谨慎选择分区键，跨分区查询效率可能更低")]),t._v(" "),a("li",[t._v("建议物理分表的方式管理大数据")]),t._v(" "),a("li",[t._v("尽量做到冷热数据分离，减小表的宽度（减小磁盘io,保证热数据的内存命中率，更有效的利用缓存，避免读入无用的冷数据，建议把经常使用列放在一张表中）")]),t._v(" "),a("li",[t._v("禁止在表中建立预留字段（难以见名识义，后期修改类型会对表进行锁定这样更亏）")]),t._v(" "),a("li",[t._v("禁止在数据库中存储图片、文件等二进制数据（应该存储到服务器上）")]),t._v(" "),a("li",[t._v("禁止在线上做数据库压力测试（要测去测试环境）")]),t._v(" "),a("li",[t._v("禁止从开发环境、测试环境直连生成环境数据库（容易破坏）")])]),t._v(" "),a("h3",{attrs:{id:"索引设计规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#索引设计规范"}},[t._v("#")]),t._v(" 索引设计规范")]),t._v(" "),a("ol",[a("li",[t._v("限制每张表上的索引数量，建议单张表索引不超过5个（索引可以提高查询效率，但会降低操作性能）")]),t._v(" "),a("li",[t._v("每个Innodb表必须有个主键(不使用更新频繁的列作为主键，不使用多列主键，不使用uuid，md5,hash，字符串作为主键)")]),t._v(" "),a("li",[t._v("主键建议选择使用自增id")]),t._v(" "),a("li",[t._v("常见索引列建议")])]),t._v(" "),a("blockquote",[a("p",[t._v("SELECT、UPDATAE、DELETE语句的WHERE从句中的列")]),t._v(" "),a("p",[t._v("包含在ORDER BY、GROUP BY、DISTINCT中的字段")]),t._v(" "),a("p",[t._v("多表JOIN的关联列")])]),t._v(" "),a("ol",{attrs:{start:"5"}},[a("li",[t._v("如何选择索引列的顺序")])]),t._v(" "),a("blockquote",[a("p",[t._v("区分度最高的列放在联合索引的最左侧")]),t._v(" "),a("p",[t._v("尽量把字段长度小的列放在联合索引的最左侧")]),t._v(" "),a("p",[t._v("使用最频繁的列放到联合索引的左侧")])]),t._v(" "),a("ol",{attrs:{start:"6"}},[a("li",[t._v("避免建多余和重复索引")])]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 重复索引")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("primary")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("key")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("、"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("index")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 、 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unique")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("index")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 多余")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 联合索引是从左到右所以a多余了")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("index")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("、 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("index")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 、"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("index")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("ol",{attrs:{start:"7"}},[a("li",[t._v("对于频繁的查询优先考虑使用覆盖索引")])]),t._v(" "),a("blockquote",[a("p",[t._v("避免Innodb表进行索引的二次查找")]),t._v(" "),a("p",[t._v("可以把随机io变为顺序io，加快了查询的效率")])]),t._v(" "),a("ol",{attrs:{start:"8"}},[a("li",[t._v("尽量避免使用外键")])]),t._v(" "),a("blockquote",[a("p",[t._v("外键可用于保证数据的参照完成性，但建议在业务端实现")]),t._v(" "),a("p",[t._v("外键会影响父表和子表的写操作从而降低性能")])]),t._v(" "),a("h3",{attrs:{id:"数据库字段设计规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据库字段设计规范"}},[t._v("#")]),t._v(" 数据库字段设计规范")]),t._v(" "),a("ol",[a("li",[t._v("优先选择符合存储需要的最小的数据类型")])]),t._v(" "),a("blockquote",[a("p",[t._v("将字符串转化为数字类型存储")])]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--字符串是15字节，转化数字是4个字节大大节省了")]),t._v("\nINET_ATON"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'255.255.255.255'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4294967295")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--取值方法")]),t._v("\nINET_NTOA"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4294967295")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'255.255.255.255'")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("对于非负数数据采用无符号整型进行存储")]),t._v(" "),a("p",[t._v("VARCHAR(N)中的N是字符数而不是字节数")])]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("避免使用TEXT、BLOB数据类型(内存大，还需要二次查询)")]),t._v(" "),a("li",[t._v("避免使用ENUM数据类型(必须使用ALTER语句才能修改，还有操作效率低)")]),t._v(" "),a("li",[t._v("尽可能把所有列定义为NOT NULL(尽量就行了,索引null列需要额外的空间来保存)")]),t._v(" "),a("li",[t._v("不推荐字符串存储时间类型的数据（缺点：无法用日期函数进行计算和比较而却占更多空间，推荐使用DATETIME）")])]),t._v(" "),a("h3",{attrs:{id:"数据库sql开发规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据库sql开发规范"}},[t._v("#")]),t._v(" 数据库sql开发规范")]),t._v(" "),a("ol",[a("li",[t._v("建议使用预编译 语句进行数据库操作(只需传参，一次解析多次使用)")]),t._v(" "),a("li",[t._v("避免数据类型隐式转换")])]),t._v(" "),a("blockquote",[a("p",[t._v("可能会导致索引失效")])]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--字符串转int")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" test3 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'123'")]),t._v(" \n")])])]),a("ol",{attrs:{start:"3"}},[a("li",[t._v("充分利用表上已存在的索引")])]),t._v(" "),a("blockquote",[a("p",[t._v("避免使用%号的查询条件，如 a like '%123%'")]),t._v(" "),a("p",[t._v("一个slq只能利用到复合索引中的一列进行范围查询")]),t._v(" "),a("p",[t._v("使用left join 或 not exists 来优化 not in")])]),t._v(" "),a("ol",{attrs:{start:"4"}},[a("li",[t._v("程序连接不同的数据库要使用不同的账号，禁止垮裤查询(降低耦合度，方便迁移)")]),t._v(" "),a("li",[t._v("禁止使用SELECT * 必须使用SELECT <字段列表> 查询")])]),t._v(" "),a("blockquote",[a("p",[t._v("很多不必要的字段消耗的io和cpu")]),t._v(" "),a("p",[t._v("无法使用覆盖索引")])]),t._v(" "),a("ol",{attrs:{start:"6"}},[a("li",[t._v("禁止使用不含字段列表的INSERT 语句")])]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--最好列出插入的字段名字，以免表机构变更带来的影响")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" t_bank "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VALUES")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'b'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'c'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("ol",{attrs:{start:"7"}},[a("li",[t._v("避免使用子查询，可以吧子查询优化为join 操作")])]),t._v(" "),a("blockquote",[a("p",[t._v("子查询的记过集无法使用索引")]),t._v(" "),a("p",[t._v("子查询会产生临时表，数据量大的话影响效率")]),t._v(" "),a("p",[t._v("消耗过多的cpu和io资源")])]),t._v(" "),a("ol",{attrs:{start:"8"}},[a("li",[t._v("避免使用join关联太多表")])]),t._v(" "),a("blockquote",[a("p",[t._v("每join一个表会多占用一部分内存")]),t._v(" "),a("p",[t._v("会产生临时表")]),t._v(" "),a("p",[t._v("建议不操作过5个")])]),t._v(" "),a("ol",{attrs:{start:"9"}},[a("li",[t._v("减少同数据库的交互次数")])]),t._v(" "),a("blockquote",[a("p",[t._v("数据库更适合处理批量操作")]),t._v(" "),a("p",[t._v("合并多个相同的操作到一起，可以提高处理效率")])]),t._v(" "),a("ol",{attrs:{start:"10"}},[a("li",[t._v("使用in 代替or")]),t._v(" "),a("li",[t._v("禁止使用 order by rand() 进行随机排序(会爆掉...,推荐在程序中获取一个随机数，再去数据库中获取操作)")]),t._v(" "),a("li",[t._v("WHERE 从句中禁止对列进行函数转哈和计算")])]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--会导致无法使用索引")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" test3 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DATE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("testTIME"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'20180808'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--推荐")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" test3 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" testTIME"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'20180808'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("AND")]),t._v(" testTIME"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'20180809'")]),t._v("\n")])])]),a("ol",{attrs:{start:"13"}},[a("li",[t._v("在明显不会有重复值得时候使用UNION ALL 而不是UNION(UNION会先产生临时表再去去重)")]),t._v(" "),a("li",[t._v("拆分复杂的大sql为多个小sql(一个sql只能用一个cpu进行计算，耗时大)")])]),t._v(" "),a("h3",{attrs:{id:"数据库操作行为规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据库操作行为规范"}},[t._v("#")]),t._v(" 数据库操作行为规范")]),t._v(" "),a("ol",[a("li",[t._v("超过100万行的批量写操作，要分批多次进行操作")])]),t._v(" "),a("blockquote",[a("p",[t._v("容易造成主从延迟")]),t._v(" "),a("p",[t._v("产生大量的日志")]),t._v(" "),a("p",[t._v("避免生成大事务操作")])]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("对于大表使用pt-online-schema-change工具 来修改表机构")]),t._v(" "),a("li",[t._v("禁止为程序使用的还在那个号赋予super权限，只能留给dba来使用")])]),t._v(" "),a("Utterances")],1)}),[],!1,null,null,null);s.default=v.exports}}]);