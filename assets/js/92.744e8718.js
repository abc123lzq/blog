(window.webpackJsonp=window.webpackJsonp||[]).push([[92],{451:function(t,a,s){"use strict";s.r(a);var n=s(42),r=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"jvm"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jvm"}},[t._v("#")]),t._v(" jvm")]),t._v(" "),s("ul",[s("li",[t._v("运行 Java "),s("strong",[t._v("字节码")]),t._v("的虚拟机")]),t._v(" "),s("li",[t._v("由于"),s("strong",[t._v("字节码")]),t._v("并不针对一种特定的机器，因此，Java程序无须重新编译便可在多种不同操作系统的计算机上运行。")])]),t._v(" "),s("p",[s("strong",[t._v("Java 程序从源代码到运行一般有下面3步：")]),t._v(" "),s("img",{attrs:{src:t.$withBase("/javaFrameWork/1602299021.jpg?v=1"),width:"767",alt:"img"}})]),t._v(" "),s("h3",{attrs:{id:"jdk-1-8-之前"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jdk-1-8-之前"}},[t._v("#")]),t._v(" JDK 1.8 之前")]),t._v(" "),s("img",{attrs:{src:t.$withBase("/javaFrameWork/16022982391.jpg?v=1"),width:"694",alt:"img"}}),t._v(" "),s("h3",{attrs:{id:"jdk-1-8"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jdk-1-8"}},[t._v("#")]),t._v(" JDK 1.8")]),t._v(" "),s("img",{attrs:{src:t.$withBase("/javaFrameWork/1602298269.jpg?v=1"),width:"694",alt:"img"}}),t._v(" "),s("h3",{attrs:{id:"程序计数器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#程序计数器"}},[t._v("#")]),t._v(" 程序计数器")]),t._v(" "),s("ul",[s("li",[t._v("字节码解释器通过改变程序计数器来依次读取指令，从而实现代码的流程控制，如：顺序执行、选择、循环、异常处理。")]),t._v(" "),s("li",[t._v("在多线程的情况下，程序计数器用于记录当前线程执行的位置，从而当线程被切换回来的时候能够知道该线程上次运行到哪儿了。")])]),t._v(" "),s("h3",{attrs:{id:"虚拟机栈"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#虚拟机栈"}},[t._v("#")]),t._v(" 虚拟机栈")]),t._v(" "),s("ul",[s("li",[t._v("与程序计数器一样，Java 虚拟机栈也是线程私有的，它的生命周期和线程相同，描述的是 Java 方法执行的内存模型，每次方法调用的数据都是通过栈传递的。")])]),t._v(" "),s("h3",{attrs:{id:"本地方法栈"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#本地方法栈"}},[t._v("#")]),t._v(" 本地方法栈")]),t._v(" "),s("ul",[s("li",[t._v("和虚拟机栈所发挥的作用非常相似，区别是： 虚拟机栈为虚拟机执行 Java 方法 （也就是字节码）服务，而本地方法栈则为虚拟机使用到的 Native 方法服务。 在 HotSpot 虚拟机中和 Java 虚拟机栈合二为一。")])]),t._v(" "),s("h3",{attrs:{id:"堆"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#堆"}},[t._v("#")]),t._v(" 堆")]),t._v(" "),s("ul",[s("li",[t._v("Java 虚拟机所管理的内存中最大的一块，Java 堆是所有线程共享的一块内存区域，在虚拟机启动时创建。此内存区域的唯一目的就是存放对象实例，几乎所有的对象实例以及数组都在这里分配内存。")])]),t._v(" "),s("h3",{attrs:{id:"方法区"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法区"}},[t._v("#")]),t._v(" 方法区")]),t._v(" "),s("ul",[s("li",[t._v("方法区与 Java 堆一样，是各个线程共享的内存区域，它用于存储已被虚拟机加载的类信息、常量、静态变量、即时编译器编译后的代码等数据。虽然 Java 虚拟机规范把方法区描述为堆的一个逻辑部分，但是它却有一个别名叫做 Non-Heap（非堆），目的应该是与 Java 堆区分开来。")])]),t._v(" "),s("h3",{attrs:{id:"常用参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常用参数"}},[t._v("#")]),t._v(" 常用参数")]),t._v(" "),s("p",[t._v("JDK 1.8 之前永久代还没被彻底移除的时候通常通过下面这些参数来调节方法区大小")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("-XX:PermSize=N //方法区 (永久代) 初始大小\n-XX:MaxPermSize=N //方法区 (永久代) 最大大小,超过这个值将会抛出 OutOfMemoryError 异常:java.lang.OutOfMemoryError: PermGen\n")])])]),s("p",[t._v("相对而言，垃圾收集行为在这个区域是比较少出现的，但并非数据进入方法区后就“永久存在”了。")]),t._v(" "),s("p",[t._v("JDK 1.8 的时候，方法区（HotSpot 的永久代）被彻底移除了（JDK1.7 就已经开始了），取而代之是元空间，元空间使用的是直接内存。")]),t._v(" "),s("p",[t._v("下面是一些常用参数：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("-XX:MetaspaceSize=N //设置 Metaspace 的初始（和最小大小）\n-XX:MaxMetaspaceSize=N //设置 Metaspace 的最大大小\n")])])]),s("p",[t._v("与永久代很大的不同就是，如果不指定大小的话，随着更多类的创建，虚拟机会耗尽所有可用的系统内存。")]),t._v(" "),s("h2",{attrs:{id:"jdk-和-jre"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jdk-和-jre"}},[t._v("#")]),t._v(" JDK 和 JRE")]),t._v(" "),s("ul",[s("li",[t._v("JDK是Java SDK。包涵了jre(自动安装)，还有编译器（javac）和工具（如javadoc和jdb）。它能够创建和编译程序。")]),t._v(" "),s("li",[t._v("JRE 是 Java运行时环境。包括 JVM，Java类库，只能运行是，它不能用于创建新程序。")])]),t._v(" "),s("h2",{attrs:{id:"分布式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分布式"}},[t._v("#")]),t._v(" 分布式")]),t._v(" "),s("p",[t._v("分布式（distributed）是指在多台不同的服务器中部署不同的服务模块，通过远程调用协同工作，对外提供服务。")]),t._v(" "),s("h2",{attrs:{id:"集群"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#集群"}},[t._v("#")]),t._v(" 集群")]),t._v(" "),s("p",[t._v("集群（cluster）是指在多台不同的服务器中部署相同应用或服务模块，构成一个集群，通过负载均衡设备对外提供服务。")]),t._v(" "),s("h2",{attrs:{id:"序列化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#序列化"}},[t._v("#")]),t._v(" 序列化")]),t._v(" "),s("ul",[s("li",[t._v("Java对象内存中的数据采编成一串二进制的数据，存放数据设备上，如磁盘。")]),t._v(" "),s("li",[t._v("当需要还原这些数据的时候，通过反序列化把数据对象还原到内存中。")])]),t._v(" "),s("h3",{attrs:{id:"序列化好处"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#序列化好处"}},[t._v("#")]),t._v(" 序列化好处")]),t._v(" "),s("ul",[s("li",[t._v("方便数据传递，减少了数据丢失率，增强了程序安全性。")]),t._v(" "),s("li",[t._v("有利于数据存储，减少了不必要的内存浪费，节约了资源。")]),t._v(" "),s("li",[t._v("简化了数据库结构，增强了程序的可维护性。")])]),t._v(" "),s("h3",{attrs:{id:"不想进行序列化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#不想进行序列化"}},[t._v("#")]),t._v(" 不想进行序列化")]),t._v(" "),s("ul",[s("li",[t._v("transient关键字的作用是：阻止实例中那些用此关键字修饰的的变量序列化")])]),t._v(" "),s("h2",{attrs:{id:"spring-ioc"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring-ioc"}},[t._v("#")]),t._v(" Spring IOC")]),t._v(" "),s("p",[t._v("控制反转")]),t._v(" "),s("h3",{attrs:{id:"设计模式7大原则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#设计模式7大原则"}},[t._v("#")]),t._v(" 设计模式7大原则")]),t._v(" "),s("ul",[s("li",[t._v("开放-封闭原则")]),t._v(" "),s("li",[t._v("单一职责原则")]),t._v(" "),s("li",[t._v("依赖倒转原则")]),t._v(" "),s("li",[t._v("最小知识原则")]),t._v(" "),s("li",[t._v("接口隔离原则")]),t._v(" "),s("li",[t._v("合成/聚合复用原则")]),t._v(" "),s("li",[t._v("里氏代换原则，任何基类可以出现的地方，子类一定可以出现")])]),t._v(" "),s("h3",{attrs:{id:"依赖倒置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#依赖倒置"}},[t._v("#")]),t._v(" 依赖倒置")]),t._v(" "),s("p",[t._v("底层是高层的依赖，这样更换轮胎所有的高层都会继承，不需要再一个个去修改高层。")]),t._v(" "),s("img",{attrs:{src:t.$withBase("/javaFrameWork/1601730012.jpg?v=1"),width:"600",alt:"img"}}),t._v(" "),s("h3",{attrs:{id:"控制反转"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#控制反转"}},[t._v("#")]),t._v(" 控制反转")]),t._v(" "),s("p",[t._v("IOC控制反转，就是依赖倒置原则的一种代码设计的思路。具体采用的方法就是所谓的依赖注入。")]),t._v(" "),s("img",{attrs:{src:t.$withBase("/javaFrameWork/1601729910.jpg?v=1"),width:"600",alt:"img"}}),t._v(" "),s("h2",{attrs:{id:"aop"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#aop"}},[t._v("#")]),t._v(" AOP")]),t._v(" "),s("p",[t._v("支持面向切面编程\n"),s("a",{attrs:{href:"https://mp.weixin.qq.com/s/mNujRjejQ1bITveFI6gkcg",target:"_blank",rel:"noopener noreferrer"}},[t._v("aop详细知识点链接"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("相关注解")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("@Aspect：用于定义切面\n\n@Before：通知方法会在目标方法调用之前执行\n\n@After：通知方法会在目标方法返回或抛出异常后执行\n\n@AfterReturning：通知方法会在目标方法返回后执行\n\n@AfterThrowing：通知方法会在目标方法抛出异常后执行\n\n@Around：通知方法会将目标方法封装起来\n\n@Pointcut：定义切点表达式\n")])])]),s("p",[t._v("示例： 执行顺序是 doBefore > doAfter  > doAfterReturning > doAround")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Aspect")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Component")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Slf4j")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SellerAuthorizeAspect")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   \n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Pointcut")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"execution(public * com.example.demo.controller.*.*(..))"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("webLog")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("info")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"webLog"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \n    \n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Before")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"webLog()"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("doBefore")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("JoinPoint")]),t._v(" joinPoint"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Throwable")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("info")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('" doBefore"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@After")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"webLog()"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("doAfter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("JoinPoint")]),t._v(" joinPoint"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Throwable")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("info")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"doAfter"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@AfterReturning")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"webLog()"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" returning "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ret"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("doAfterReturning")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" ret"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Throwable")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("info")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"doAfterReturning"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Around")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"webLog()"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("doAround")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ProceedingJoinPoint")]),t._v(" joinPoint"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Throwable")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("info")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"doAround"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("WebLog")]),t._v(" webLog "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("WebLog")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        webLog"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setIp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"123123"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        LOGGER"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("info")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"切面处理{}"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" JSON"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toJSONString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("webLog"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        \n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" joinPoint"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("proceed")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//这里我们切完后要放开原本的Controell逻辑")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"面向对象编程三大特性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#面向对象编程三大特性"}},[t._v("#")]),t._v(" 面向对象编程三大特性")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("封装")]),t._v("把一个对象的属性私有化，也可以提供一些可以被外界访问的属性的方法(控制作用域)")]),t._v(" "),s("li",[s("strong",[t._v("继承")]),t._v("子类继承父类的功能，就能复用父类的代码。但不能选择性地继承父类，而是全部继承，父类中的私有属性和方法子类是无法访问，只能拥有。")]),t._v(" "),s("li",[s("strong",[t._v("多态")]),t._v("就是指程序中定义的引用变量所指向的具体类型.两种形式可以实现多态：继承和接口")])]),t._v(" "),s("h2",{attrs:{id:"构造方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#构造方法"}},[t._v("#")]),t._v(" 构造方法")]),t._v(" "),s("h3",{attrs:{id:"构造方法的作用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#构造方法的作用"}},[t._v("#")]),t._v(" 构造方法的作用")]),t._v(" "),s("ul",[s("li",[t._v("类对象的初始化工作会有默认的不带参数的构造方法。")])]),t._v(" "),s("h3",{attrs:{id:"构造方法的特性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#构造方法的特性"}},[t._v("#")]),t._v(" 构造方法的特性")]),t._v(" "),s("ul",[s("li",[t._v("名字与类名相同。")]),t._v(" "),s("li",[t._v("没有返回值，但不能用void声明构造函数。")]),t._v(" "),s("li",[t._v("生成类的对象时自动执行，无需调用。")])]),t._v(" "),s("h3",{attrs:{id:"不做事且没有参数的构造方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#不做事且没有参数的构造方法"}},[t._v("#")]),t._v(" 不做事且没有参数的构造方法")]),t._v(" "),s("ul",[s("li",[t._v("Java 程序在执行子类的构造方法之前，如果没有用 super()来调用父类特定的构造方法，则会调用父类中“没有参数的构造方法”。")]),t._v(" "),s("li",[t._v("因此，如果父类中只定义了有参数的构造方法，而在子类的构造方法中又没有用 super()来调用父类中特定的构造方法，则编译时将发生错误")])]),t._v(" "),s("h3",{attrs:{id:"构造器-constructor-是否可被-override"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#构造器-constructor-是否可被-override"}},[t._v("#")]),t._v(" 构造器 Constructor 是否可被 override")]),t._v(" "),s("ul",[s("li",[t._v("父类的私有属性和构造方法并不能被继承，所以 Constructor 也就不能被 override（重写）,但是可以 overload（重载）,所以你可以看到一个类中有多个构造函数的情况。")])]),t._v(" "),s("h2",{attrs:{id:"成员变量与局部变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#成员变量与局部变量"}},[t._v("#")]),t._v(" 成员变量与局部变量")]),t._v(" "),s("ul",[s("li",[t._v("成员变量是属于类的，而局部变量是在"),s("strong",[t._v("方法中")]),t._v("定义的变量或是方法的参数；")]),t._v(" "),s("li",[t._v("成员变量可以被 public,private,static ,final等修饰符所修饰，而局部变量只能能被 "),s("strong",[t._v("final")]),t._v(" 所修饰。")]),t._v(" "),s("li",[t._v("如果成员变量存在于堆内存，局部变量则存在于栈内存。")]),t._v(" "),s("li",[t._v("成员变量它随着对象的创建而存在，而局部变量随着方法的"),s("strong",[t._v("调用")]),t._v("而自动消失。")]),t._v(" "),s("li",[t._v("成员变量如果没有被赋初值:则会自动以类型的默认值而赋值，而局部变量则"),s("strong",[t._v("不会自动赋值")]),t._v("。")])]),t._v(" "),s("h2",{attrs:{id:"自动装箱与拆箱"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自动装箱与拆箱"}},[t._v("#")]),t._v(" 自动装箱与拆箱")]),t._v(" "),s("ul",[s("li",[t._v("装箱:基本类型用它们对应的引用类型包装起来；")]),t._v(" "),s("li",[t._v("拆箱：将包装类型转换为基本数据类型")])]),t._v(" "),s("h2",{attrs:{id:"重载和重写的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#重载和重写的区别"}},[t._v("#")]),t._v(" 重载和重写的区别")]),t._v(" "),s("ul",[s("li",[t._v("重载： 发生在同一个类中，方法名必须相同，参数类型不同、个数不同、顺序不同，方法返回值和访问修饰符可以不同，发生在编译时。")]),t._v(" "),s("li",[t._v("重写： 发生在父子类中，方法名、参数列表必须相同，返回值范围小于等于父类，抛出的异常范围小于等于父类，访问修饰符范围大于等于父类；如果父类方法访问修饰符为 private 则子类就不能重写该方法。")])]),t._v(" "),s("h2",{attrs:{id:"静态方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#静态方法"}},[t._v("#")]),t._v(" 静态方法")]),t._v(" "),s("h3",{attrs:{id:"静态方法访问非静态"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#静态方法访问非静态"}},[t._v("#")]),t._v(" 静态方法访问非静态")]),t._v(" "),s("ul",[s("li",[t._v("在一个静态方法内调用和访问一个非静态成员为什么是非法的")]),t._v(" "),s("li",[t._v("由于静态方法设计，可以不通过对象进行调用的机制")])]),t._v(" "),s("h3",{attrs:{id:"静态方法和实例方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#静态方法和实例方法"}},[t._v("#")]),t._v(" 静态方法和实例方法")]),t._v(" "),s("ul",[s("li",[t._v("调用静态方法可以无需创建对象。")]),t._v(" "),s("li",[t._v("静态方法在访问本类的成员时，只允许访问静态成员")])]),t._v(" "),s("h2",{attrs:{id:"接口和抽象类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#接口和抽象类"}},[t._v("#")]),t._v(" 接口和抽象类")]),t._v(" "),s("ul",[s("li",[t._v("所有方法在接口中不能有实现(Java 8 开始接口方法可以有默认实现），而抽象类可以有非抽象的方法。")]),t._v(" "),s("li",[t._v("接口中除了static、final变量，不能有其他变量，而抽象类中则不一定。")]),t._v(" "),s("li",[t._v("一个类可以实现多个接口，但只能实现一个抽象类。接口自己本身可以通过extends关键字扩展多个接口。")]),t._v(" "),s("li",[t._v("接口方法默认修饰符是public，抽象方法可以有public、protected和default这些修饰符（抽象方法就是为了被重写所以不能使用private关键字修饰！）。")])]),t._v(" "),s("h2",{attrs:{id:"异常处理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#异常处理"}},[t._v("#")]),t._v(" 异常处理")]),t._v(" "),s("img",{attrs:{src:t.$withBase("/javaFrameWork/1602299641(1).jpg?v=1"),width:"600",alt:"img"}}),t._v("\n-  Error（错误）:是程序**无法处理的错误**，表示代码运行时 JVM出现的问题\n-  Exception（异常）:是程序本身**可以处理的异常**如空指针 NullPointerException\n"),s("h3",{attrs:{id:"throw和throws区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#throw和throws区别"}},[t._v("#")]),t._v(" throw和throws区别")]),t._v(" "),s("ul",[s("li",[t._v("throws出现在方法函数头；而throw出现在函数体。")]),t._v(" "),s("li",[t._v("throw：（针对对象的做法）")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("yichang")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NumberFormatException")]),t._v(" e "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NumberFormatException")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[t._v("throws：（针对一个方法抛出的异常）")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("yichang")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NumberFormatException")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"10L"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"io流"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#io流"}},[t._v("#")]),t._v(" io流")]),t._v(" "),s("img",{attrs:{src:t.$withBase("/javaFrameWork/1602299581.jpg?v=1"),width:"599",alt:"img"}}),t._v(" "),s("h2",{attrs:{id:"对象的相等"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对象的相等"}},[t._v("#")]),t._v(" 对象的相等")]),t._v(" "),s("ul",[s("li",[t._v("对象的相等，比的是内存中存放的内容是否相等。")]),t._v(" "),s("li",[t._v("引用相等，比较的是他们指向的内存地址是否相等。")])]),t._v(" "),s("h2",{attrs:{id:"与-equals"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#与-equals"}},[t._v("#")]),t._v(" == 与 equals()")]),t._v(" "),s("ul",[s("li",[t._v("= : 它的作用是判断两个对象的地址是不是相等。")]),t._v(" "),s("li",[t._v("equals() : 它的作用也是判断两个对象是否相等。")]),t._v(" "),s("li",[t._v("String 中的 equals 方法是被重写过的，因为 object 的 equals 方法是比较的对象的内存地址，而 String 的 equals 方法比较的是对象的值。")])]),t._v(" "),s("h2",{attrs:{id:"string-和-stringbuffer"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#string-和-stringbuffer"}},[t._v("#")]),t._v(" String 和 StringBuffer")]),t._v(" "),s("ul",[s("li",[t._v("String 类中使用 final 关键字修饰字符数组来保存字符串，所以 String 对象是不可变的。")]),t._v(" "),s("li",[t._v("而StringBuilder 与 StringBuffer 都继承自 AbstractStringBuilder类,他是用  "),s("strong",[t._v("字符数组保存")]),t._v("  中也是使用字符串char[]value ，没有用 final 关键字修饰，所以这两种对象都是可变的")])]),t._v(" "),s("ul",[s("li",[t._v("操作少量的数据: 适用String,多个会new String 性能比较低，要采用 StringBuffer")])]),t._v(" "),s("h2",{attrs:{id:"键盘输入"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#键盘输入"}},[t._v("#")]),t._v(" 键盘输入")]),t._v(" "),s("p",[s("strong",[t._v("获取用键盘输入常用的的两种方法")]),t._v("\n方法1：通过 Scanner")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Scanner")]),t._v(" input "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Scanner")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("in"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" s  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" input"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("nextLine")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ninput"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("方法2：通过 BufferedReader")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BufferedReader")]),t._v(" input "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BufferedReader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InputStreamReader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("in"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" s "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" input"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("readLine")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);